/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-10-27 06:04:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mem;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.mem.vo.SpringMemberVO;
import a.b.c.com.common.CodeUtil;
import java.util.ArrayList;

public final class springMemSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("a.b.c.com.mem.vo.SpringMemberVO");
    _jspx_imports_classes.add("a.b.c.com.common.CodeUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원 조회</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	* {\r\n");
      out.write("		margin: 0 auto;\r\n");
      out.write("		/*text-align: center;*/\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	div {\r\n");
      out.write("		margin: 50px 0px 0px 100px;\r\n");
      out.write("	}			\r\n");
      out.write("\r\n");
      out.write("	td, th {\r\n");
      out.write("		 padding: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.tt {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.photo {\r\n");
      out.write("		border:1px solid red;\r\n");
      out.write("		width: 160px;\r\n");
      out.write("		height: 180px;\r\n");
      out.write("		display: block;\r\n");
      out.write("		margin-reft: auto;\r\n");
      out.write("		margin-rigth; auto;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<!-- 다음 주소록 OPEN API CDN 불러오기  -->\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){	\r\n");
      out.write("		\r\n");
      out.write("		// 이메일 \r\n");
      out.write("		$('#memail2').change(function(){	\r\n");
      out.write("		$(\"#memail2 option:selected\").each(function () {\r\n");
      out.write("			if($(this).val()== '1'){ //직접입력일 경우 \r\n");
      out.write("					var aa = $(\"#memail1\").val();\r\n");
      out.write("					//alert(\"aa >>> : \" + aa);\r\n");
      out.write("					$(\"#memail1\").val(''); //값 초기화 \r\n");
      out.write("					$(\"#memail1\").attr(\"readonly\",false); //활성화 				\r\n");
      out.write("			}else{ //직접입력이 아닐경우 \r\n");
      out.write("					$(\"#memail1\").val($(this).text()); //선택값 입력 \r\n");
      out.write("					$(\"#memail1\").attr(\"readonly\",true); //비활성화 \r\n");
      out.write("			}}); \r\n");
      out.write("		}); 	\r\n");
      out.write("		\r\n");
      out.write("		// 우편번호	\r\n");
      out.write("		$(\"#zonecode\").click(function(){\r\n");
      out.write("			console.log(\"zonecode >>> : \");\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete: function(data) {\r\n");
      out.write("				    $(\"#mzonecode\").val(data.zonecode); //5자리 새우편번호 사용\r\n");
      out.write("				    $(\"#mroadaddress\").val(data.roadAddress); //도로명 주소\r\n");
      out.write("				    $(\"#mjibunaddress\").val(data.jibunAddress); //지번주소			\r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	//  U\r\n");
      out.write("	$(document).on(\"click\", \"#U\", function(){\r\n");
      out.write("		//alert(\"U >>> : \");		\r\n");
      out.write("		$(\"#memUpdateForm\").attr({ \"method\":\"POST\"\r\n");
      out.write("			                      ,\"action\":\"memUpdate.h\"}).submit();\r\n");
      out.write("	});\r\n");
      out.write("	//  D\r\n");
      out.write("	$(document).on(\"click\", \"#D\", function(){\r\n");
      out.write("		//alert(\"D >>> : \");\r\n");
      out.write("		$(\"#memUpdateForm\").attr({ \"method\":\"POST\"\r\n");
      out.write("			                      ,\"action\":\"memDelete.h\"}).submit();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//  I\r\n");
      out.write("	$(document).on(\"click\", \"#I\", function(){\r\n");
      out.write("		location.href=\"memForm.h\";\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// SALL\r\n");
      out.write("	$(document).on(\"click\", \"#SALL\", function(){		\r\n");
      out.write("		$(\"#memUpdateForm\").attr({\"method\":\"GET\", \"action\":\"memSelectAll.h\"}).submit();		\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"compCheck()\">\r\n");
 request.setCharacterEncoding("EUC-KR");
      out.write(" \r\n");
      out.write("SELECT \r\n");

	Object obj = request.getAttribute("listS");
	if (obj == null) return;
	
	ArrayList<SpringMemberVO> aList = (ArrayList<SpringMemberVO>)obj;
	int nCnt = aList.size();
	out.println(":::: 조건 조회 >>> : " + nCnt + " 건");
		
	String mgender = "";
	String mbirth = "";
	String mhp = "";
	String mtel = "";
	String memail = "";	
	String mzonecode = "";
	String mroadaddress = "";	
	String mroadaddressdetail = "";
	String mjibunaddress = "";
	String mhobby = "";				
		
	SpringMemberVO mvo = null;	
	if (nCnt == 1){
		mvo = aList.get(0);
		
		// 성별
		mgender = mvo.getMgender();
		// 생년월일
		mbirth = CodeUtil.birth(mvo.getMbirth());
		// 핸드폰
		mhp = CodeUtil.hp(mvo.getMhp());
		// 전화번호
		mtel = CodeUtil.tel(mvo.getMtel());		
		// 이메일 
		memail = mvo.getMemail();
		// 주소
		mzonecode = mvo.getMzonecode();	
		mroadaddress= mvo.getMroadaddress();
		String addr[] = mroadaddress.split("@");
		mroadaddress = addr[0];
		mroadaddressdetail = addr[1];
		mjibunaddress = mvo.getMjibunaddress();		
		// 취미
		mhobby = mvo.getMhobby();
	}

      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("<div>\r\n");
      out.write("<form name=\"memUpdateForm\" id=\"memUpdateForm\">\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<script>\r\n");
      out.write("function compCheck(){\r\n");
      out.write("	console.log(\"compCheck >>> 진입 >>> : \");\r\n");
      out.write("\r\n");
      out.write("	// 성별\r\n");
      out.write("	var gen = '");
      out.print( mgender );
      out.write("';\r\n");
      out.write("	console.log(\"gen >>> : \"  + gen);\r\n");
      out.write("	if ('01' == gen){\r\n");
      out.write("		document.getElementsByName(\"mgender\")[0].checked = true;\r\n");
      out.write("	}\r\n");
      out.write("	if ('02' == gen){\r\n");
      out.write("		document.getElementsByName(\"mgender\")[1].checked = true;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 이메일 \r\n");
      out.write("	var email = '");
      out.print( memail );
      out.write("';	\r\n");
      out.write("	var emails = email.split('@');\r\n");
      out.write("	document.getElementById(\"memail\").value = emails[0];\r\n");
      out.write("	document.getElementById(\"memail1\").value = emails[1];\r\n");
      out.write("	\r\n");
      out.write("	// 취미\r\n");
      out.write("	var hobs = '");
      out.print( mhobby );
      out.write("';\r\n");
      out.write("	console.log(\"hobs >>> : \"  + hobs);\r\n");
      out.write("	var hob = hobs.split(',');\r\n");
      out.write("	for (var m=0; m < hob.length; m++){\r\n");
      out.write("		var hobValue = hob[m];\r\n");
      out.write("		console.log(\"hobValue >>> : \" + hobValue);\r\n");
      out.write("		if ('01' == hobValue){\r\n");
      out.write("			document.getElementsByName(\"mhobby\")[0].checked = true;\r\n");
      out.write("		}\r\n");
      out.write("		if ('02' == hobValue){\r\n");
      out.write("			document.getElementsByName(\"mhobby\")[1].checked = true;\r\n");
      out.write("		}\r\n");
      out.write("		if ('03' == hobValue){\r\n");
      out.write("			document.getElementsByName(\"mhobby\")[2].checked = true;\r\n");
      out.write("		}\r\n");
      out.write("		if ('04' == hobValue){\r\n");
      out.write("			document.getElementsByName(\"mhobby\")[3].checked = true;\r\n");
      out.write("		}\r\n");
      out.write("		if ('05' == hobValue){\r\n");
      out.write("			document.getElementsByName(\"mhobby\")[4].checked = true;\r\n");
      out.write("		}		\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<tr>	\r\n");
      out.write("	<td colspan=\"3\" align=\"center\">	\r\n");
      out.write("					\r\n");
      out.write("		<font size=\"4\" style=\"color:blue;\">회원정보 수정 && 삭제</font> \r\n");
      out.write("		<img src=\"/springHbe/img/img_mandu/ase.gif\" width=\"25\" height=\"25\" alt=\"image\">		\r\n");
      out.write("	</td>				\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>회원번호</td>\r\n");
      out.write("	<td>\r\n");
      out.write("		<input type=\"text\" name=\"mnum\" id=\"mnum\"  value=\"");
      out.print( mvo.getMnum() );
      out.write("\" readonly />\r\n");
      out.write("	</td>\r\n");
      out.write("	<td rowspan=\"5\">\r\n");
      out.write("		<img class=\"photo\" src=\"/springHbe/fileupload/member/");
      out.print( mvo.getMphoto() );
      out.write("\" alt=\"image\">\r\n");
      out.write("	</td>	\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>이름</td>\r\n");
      out.write("	<td><input type=\"text\" name=\"mname\" id=\"mname\" value=\"");
      out.print( mvo.getMname() );
      out.write("\" readonly /></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>아이디</td>\r\n");
      out.write("	<td>\r\n");
      out.write("		<input type=\"text\" name=\"mid\" id=\"mid\" style=\"width:100px\" value=\"");
      out.print( mvo.getMid() );
      out.write("\" readonly />	\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>패스워드</td>\r\n");
      out.write("	<td>\r\n");
      out.write("		<input type=\"text\" name=\"mpw\" id=\"mpw\" style=\"width:100px\" value=\"");
      out.print( mvo.getMpw() );
      out.write("\" readonly /><br/>		\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>성별</td>\r\n");
      out.write("	<td> \r\n");
      out.write("		<input type=\"radio\" name=\"mgender\" id=\"mgender\" value=\"01\" checked /> 여자\r\n");
      out.write("      	<input type=\"radio\" name=\"mgender\" id=\"mgender\" value=\"02\" /> 남자\r\n");
      out.write("    </td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>생년월일</td>\r\n");
      out.write("	<td  colspan=\"2\">		\r\n");
      out.write("		<input type=\"text\" name=\"mbirth\" id=mbirth value=\"");
      out.print( mbirth );
      out.write("\" readonly />		\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>핸드폰</td>\r\n");
      out.write("	<td   colspan=\"2\">\r\n");
      out.write("		<input type=\"text\" name=\"mhp\" id=\"mhp\" value=\"");
      out.print( mhp );
      out.write("\" readonly />\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>전화번호</td>\r\n");
      out.write("	<td   colspan=\"2\">\r\n");
      out.write("		<input type=\"text\" name=\"mtel\" id=\"mtel\" value=\"");
      out.print( mtel );
      out.write("\" readonly />\r\n");
      out.write("	</td>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>이메일</td>\r\n");
      out.write("	<td  colspan=\"2\">		\r\n");
      out.write("		<input type=\"text\" name=\"memail\"  id=\"memail\" style=\"width:100px\"  />\r\n");
      out.write("		@ <input type=\"text\" name=\"memail1\" id=\"memail1\" style=\"width:100px\" \r\n");
      out.write("			placeholder=\"직접입력\" />\r\n");
      out.write("		<select name=\"memail2\" id=\"memail2\">\r\n");
      out.write("        	 <option value=\"1\" selected>직접입력</option>\r\n");
      out.write("       		 <option value=\"naver.com\">naver.com</option>	       	   \r\n");
      out.write("      		 <option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("      		 <option value=\"daum.net\">daum.net</option>	       	   \r\n");
      out.write("         </select>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write(" 	<td>주소</td>\r\n");
      out.write(" 	<td   colspan=\"2\">\r\n");
      out.write(" 		<input type=\"text\" name=\"mzonecode\" id=\"mzonecode\" \r\n");
      out.write(" 			placeholder=\"우편번호\" style=\"width:50px\" value=\"");
      out.print( mzonecode );
      out.write("\" >\r\n");
      out.write(" 		<input type=\"button\" name=\"zonecode\" id=\"zonecode\" value=\"우편번호 찾기\"><br>	 	\r\n");
      out.write(" 		<input type=\"text\" name=\"mroadaddress\" id=\"mroadaddress\" \r\n");
      out.write(" 			placeholder=\"도로명주소\" style=\"width:250px\" value=\"");
      out.print( mroadaddress );
      out.write("\" ><br>	 	\r\n");
      out.write(" 		<input type=\"text\" name=\"mroadaddressdetail\" id=\"mroadaddressdetail\" \r\n");
      out.write(" 			placeholder=\"도로명주소 상세주소\" style=\"width:250px\" value=\"");
      out.print( mroadaddressdetail );
      out.write("\" ><br>	 	\r\n");
      out.write(" 		<input type=\"text\" name=\"mjibunaddress\" id=\"mjibunaddress\"\r\n");
      out.write(" 			 placeholder=\"지번주소\" style=\"width:250px\" value=\"");
      out.print( mjibunaddress );
      out.write("\">\r\n");
      out.write(" 	</td>\r\n");
      out.write("</tr>	 \r\n");
      out.write("<tr>\r\n");
      out.write("	<td>취미</td>\r\n");
      out.write("	<td   colspan=\"2\"> \r\n");
      out.write("		<input type=\"checkbox\" name=\"mhobby\" value=\"01\" />알고리즘		      \r\n");
      out.write("        <input type=\"checkbox\" name=\"mhobby\" value=\"02\" />코딩\r\n");
      out.write("        <input type=\"checkbox\" name=\"mhobby\" value=\"03\" />분석설계<br>\r\n");
      out.write("        <input type=\"checkbox\" name=\"mhobby\" value=\"04\" />데이터베이스\r\n");
      out.write("        <input type=\"checkbox\" name=\"mhobby\" value=\"05\" />스크립트\r\n");
      out.write("    </td>\r\n");
      out.write("</tr>	 \r\n");
      out.write("<tr>\r\n");
      out.write("	<td>소개글</td>\r\n");
      out.write("	<td   colspan=\"2\">\r\n");
      out.write("		<textarea name=\"minfo\" id=\"minfo\" rows=\"5\" cols=\"50\">");
      out.print( mvo.getMinfo() );
      out.write("				\r\n");
      out.write("		</textarea>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td colspan=\"3\" align=\"center\">		\r\n");
      out.write("	<input type=\"button\" value=\"수정\" id='U' />\r\n");
      out.write("	<input type=\"button\" value=\"삭제\"  id='D' />\r\n");
      out.write("    <input type=\"reset\" value=\"취소\" />\r\n");
      out.write("    &nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("    <input type=\"button\" value=\"입력\"  id='I' />\r\n");
      out.write("	<input type=\"button\" value=\"목록\"  id='SALL' />\r\n");
      out.write("</td>	\r\n");
      out.write("<tr>			\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
