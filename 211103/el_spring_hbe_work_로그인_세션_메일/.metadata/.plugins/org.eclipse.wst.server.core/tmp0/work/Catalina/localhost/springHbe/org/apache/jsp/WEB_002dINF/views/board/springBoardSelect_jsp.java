/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-10-26 02:05:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.board.vo.SpringBoardVO;
import java.util.List;

public final class springBoardSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/00.KOSMO93/30.Web/el_spring_hbe_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springHbe/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1635135164142L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("a.b.c.com.board.vo.SpringBoardVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write("        \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>BOARD SELECT</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	div {\r\n");
      out.write("			margin: 50px 0px 0px 100px;\r\n");
      out.write("		}\r\n");
      out.write("	.mem{ text-align: center;}\r\n");
      out.write("</style>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호 확인\r\n");
      out.write("		$(document).on(\"click\", \"#pwbtn\", function(){\r\n");
      out.write("			alert(\"pwbtn >>> : \");\r\n");
      out.write("\r\n");
      out.write("			let pwcheckURL = \"boardPwCheck.h\";\r\n");
      out.write("			let reqType = \"POST\";\r\n");
      out.write("			let dataParam = {\r\n");
      out.write("				sbnum: $(\"#sbnum\").val(),\r\n");
      out.write("				sbpw: $(\"#sbpw\").val(),\r\n");
      out.write("			};\r\n");
      out.write("			//dataParam = $(\"#boardUpdateForm\").serialize();\r\n");
      out.write("			//alert(\"dataParam >>> : \" + dataParam);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: pwcheckURL,\r\n");
      out.write("				type: reqType,								\r\n");
      out.write("				data: dataParam,	            \r\n");
      out.write("				success: whenSuccess,\r\n");
      out.write("				error: whenError\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			function whenSuccess(resData){	\r\n");
      out.write("				alert(\"resData >>> : \" + resData);\r\n");
      out.write("				if (\"PW_GOOD\" == resData){\r\n");
      out.write("					alert(\"비밀번호 GOOD.\");\r\n");
      out.write("					$(\"#sbpw\").attr(\"readonly\", true);										\r\n");
      out.write("					$(\"#U\").css('background-color','yellow');\r\n");
      out.write("					$(\"#D\").css('color','red');\r\n");
      out.write("				}else if (\"PW_GOOD\" == resData){\r\n");
      out.write("					alert(\"비밀번호 BAD.\");\r\n");
      out.write("					$(\"#sbpw\").val('');\r\n");
      out.write("					$(\"#sbpw\").focus();\r\n");
      out.write("				};				\r\n");
      out.write("			}\r\n");
      out.write("			function whenError(e){\r\n");
      out.write("				alert(\"e >>> : \" + e.responseText);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("		//  U\r\n");
      out.write("		$(document).on(\"click\", \"#U\", function(){\r\n");
      out.write("			//alert(\"U >>> : \");		\r\n");
      out.write("			$(\"#boardUpdateForm\").attr({ \"method\":\"POST\"\r\n");
      out.write("				                        ,\"action\":\"boardUpdate.h\"}).submit();\r\n");
      out.write("		});\r\n");
      out.write("		//  D\r\n");
      out.write("		$(document).on(\"click\", \"#D\", function(){\r\n");
      out.write("			//alert(\"D >>> : \");\r\n");
      out.write("			$(\"#boardUpdateForm\").attr({ \"method\":\"POST\"\r\n");
      out.write("				                        ,\"action\":\"boardDelete.h\"}).submit();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("</script>	\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("BOARD SELECT\r\n");
      out.write("<hr>\r\n");
 request.setCharacterEncoding("UTF-8");
      out.write(' ');
      out.write('\r');
      out.write('\n');

	Object obj = request.getAttribute("listS");
	List<SpringBoardVO> list = (List)obj;
	SpringBoardVO bvo = null;
	if (list.size() == 1) {
		bvo = list.get(0);
	};

      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("<form name=\"boardUpdateForm\" id=\"boardUpdateForm\">\r\n");
      out.write("<table border=1>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"center\">게시판 글수정하기</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td class=\"mem\">글번호</td>\r\n");
      out.write("<td><input type=\"text\" name=\"sbnum\" id=\"sbnum\" value=\"");
      out.print( bvo.getSbnum() );
      out.write("\" readonly/></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td class=\"mem\">제목</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type=\"text\" name=\"sbsubject\" id=\"sbsubject\" value=\"");
      out.print( bvo.getSbsubject() );
      out.write("\" style=\"width:100px\"  readonly/>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td class=\"mem\">이름</td>\r\n");
      out.write("<td><input type=\"text\" name=\"sbname\" id=\"sbname\" value=\"");
      out.print(  bvo.getSbname() );
      out.write("\" readonly/></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</tr>	 \r\n");
      out.write("<tr>\r\n");
      out.write("<td class=\"mem\">소개글</td>\r\n");
      out.write("<td>\r\n");
      out.write("<textarea name=\"sbcontent\" id=\"sbcontent\" rows=\"5\" cols=\"50\">");
      out.print( bvo.getSbcontent() );
      out.write("					\r\n");
      out.write("</textarea>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td class=\"mem\">사진</td>\r\n");
      out.write("<td> \r\n");
      out.write("<img src=\"/springHbe/imgupload/sm_");
      out.print( bvo.getSbfile() );
      out.write("\" border=\"1\" width=\"40\" height=\"50\" alt=\"image\">\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</tr>\r\n");
      out.write("<td class=\"mem\">등록일</td>\r\n");
      out.write("<td> \r\n");
      out.write("<input type=\"text\" name=\"sbinsertdate\" id=\"sbinsertdate\" value=\"");
      out.print( bvo.getSbinsertdate() );
      out.write("\" readonly />		      \r\n");
      out.write("</td>\r\n");
      out.write("</tr>	 \r\n");
      out.write("<td class=\"mem\">수정일</td>\r\n");
      out.write("<td> \r\n");
      out.write("<input type=\"text\" name=\"sbupdatedate\" id=\"sbupdatedate\" value=\"");
      out.print( bvo.getSbupdatedate() );
      out.write("\" readonly />		      \r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td class=\"mem\">패스워드</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type=\"text\" name=\"sbpw\" id=\"sbpw\"  />\r\n");
      out.write("<button type=\"button\" id=\"pwbtn\">비밀번호</button>\r\n");
      out.write("\r\n");
      out.write("</td>	 	 \r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"right\"> 		\r\n");
      out.write("<button type=\"button\" id=\"U\">수정</button>\r\n");
      out.write("<button type=\"button\" id=\"D\">삭제</button>\r\n");
      out.write("</td>				\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("<p>\r\n");
      out.write("<h3>댓글 처리 하는 루틴 </h3>\r\n");
      out.write("<hr>\r\n");
      //  c:import
      org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
      boolean _jspx_th_c_005fimport_005f0_reused = false;
      try {
        _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fimport_005f0.setParent(null);
        // /WEB-INF/views/board/springBoardSelect.jsp(156,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fimport_005f0.setUrl("/rboardForm.h");
        int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
          if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_c_005fimport_005f0[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fimport_005f0);
            }
            do {
              out.write('\r');
              out.write('\n');
              out.write('	');
              //  c:param
              org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
              boolean _jspx_th_c_005fparam_005f0_reused = false;
              try {
                _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
                _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fimport_005f0);
                // /WEB-INF/views/board/springBoardSelect.jsp(157,1) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fparam_005f0.setName("sbnum");
                // /WEB-INF/views/board/springBoardSelect.jsp(157,1) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fparam_005f0.setValue(bvo.getSbnum());
                int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
                if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
                _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
                _jspx_th_c_005fparam_005f0_reused = true;
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f0_reused);
              }
              out.write('\r');
              out.write('\n');
              int evalDoAfterBody = _jspx_th_c_005fimport_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_c_005fimport_005f0[0]--;
            }
          }
          if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_c_005fimport_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.reuse(_jspx_th_c_005fimport_005f0);
        _jspx_th_c_005fimport_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
      }
      out.write("\r\n");
      out.write("<!-- \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/rboardForm.h" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("sbnum", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bvo.getSbnum()), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write(" -->	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
