package a.b.c.com.cgi.mail;

import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class MailSend {

	public void MailSend() {
		
		Properties prop = System.getProperties();
		/*
		 * Properties prop = System.getProperties();
		 * Properties 클래스는 시스템 속성을 객체로 생성하는 클래스
		 * Hashtable을 상속받는 클래스로 속성과 값은 1:1로 저장됨
		 * */
		
		// Mail 처리환경
		prop.put("mail.smtp.starttls.enable","true");
		// 로그인시 TLS를 사용할 것인지 설정
		prop.put("mail.smtp.host","smtp.gmail.com");
		// 이메일 방솔을 처리해줄 SMTP서버
		prop.put("mail.smtp.auth","true");
		// SMTP 서버의 인증을 사용한다는 의미
		prop.put("mail.smtp.port","587");
		// TLS의 포트번호는 587이며 SSL의 포트번호는 465이다.
		
		Authenticator auth = new MailAuth();
		Session session = Session.getDefaultInstance(prop, auth);
		/*
		 * MailAuth.java에서 Authenticator를 상속받아 생성한 
		 * MailAuth 클래스를 받아 세션을 생성한다.
		 * getDefaultInstance의 첫번째 파라미터는 27~33Line에서 정의한 값
		 * */

		// MimeMessage는 Message(추상)클래스를 상속받은 인터넷 메일을 위한 클래스
		// 38Line 생성한 세션을 담아 msg객체를 생성한다.
		MimeMessage msg = new MimeMessage(session);
		
		
		try {
			// ������ ��¥ ����
			msg.setSentDate(new Date());	
			
			// ������
			msg.setFrom(new InternetAddress("eunbh44testmail@gmail.com", "mailTest"));	
			// Message Ŭ������ setFrom()�޼ҵ带 ����Ͽ� �߼��ڸ� �����Ѵ�.
			// �߼����� ����,�߼����� InternetAddress Ŭ������ �̸��� �ּҸ� ��Ÿ�� �� ����ϴ� Ŭ����

			// �������� ������ ����
			// �޴��� ������ ���� google,naver,daum
			InternetAddress to = new InternetAddress("eunbh63@gmail.com");	

			
			msg.setRecipient(Message.RecipientType.TO, to);
			/* 
			 * Message Ŭ������ setRecipient()�޼ҵ带 ����Ͽ� �����ڸ� ����
			 * setRecipient() �޼ҵ�� ������, ����, ���� ���� ������ �����ϴ�.
			 * Message.RecipientType.TO : �޴»��
			 * Message.RecipientType.CC : ����
			 * Message.RecipientType.BCC : ���� ����
			 * */

            // ������ ���� ���� , encoding Ÿ�� ����
            msg.setSubject("���� �׽�Ʈ", "UTF-8");	            

            // ������ ���� �Է�, encoding Ÿ�� ����
            msg.setText("���� ������ ����Ͽ� ���̹� ���Ϸ� ������ �׽�Ʈ.", "UTF-8");

            // Transprot�� ������ ���������� ������ Ŭ������ ������ ������ �κ��̴�.            
            Transport.send(msg);

	            
	        } catch(AddressException ae) {  
	            System.out.println("AddressException : " + ae.getMessage());           
	        } catch(MessagingException me) {
	        	// ���� �������� ���� ����ó��
	            System.out.println("MessagingException : " + me.getMessage());
	        } catch(UnsupportedEncodingException e) {
	        	// �������� ���� ���ڵ��� ����� ��� ���� ó��
	            System.out.println("UnsupportedEncodingException : " + e.getMessage());			
	        }           
	    }
	}

