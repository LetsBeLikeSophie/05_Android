2021-11-01
------------------------------------

웹 애플리케이션( Web Application)
-------------------
: 웹 브라우저에서 구동되는 프로그램
: 기술 

프리젠테이션 : 웹 서버
	클라이언트 사이드 스크립트
		HTML, CSS, javaScript, jQuery, Ajax, XML, JSON 
	서버 사이드 스크립트
		JSP, Servlet, el, jstl
비즈니스 : WAS 
		java
퍼시스턴스 : 데이터베이스 서버
		오라클 

아킥텍처
	Model II + Web MVC 패턴
	Spring Web MVC 프레임워크 + Mybatis 프레임워크


앱 애플리케션( App Application)
-------------------
: 폰에서 구동되는 프로그램 

안드로이드
	자바, 코틀린
	자바 기술 : coreJava + Swing 기본 개념
	안드로이드에서 기본 아키텍쳐가 구성되어 있어서 
	규칙에 맞게 컴포넌트를 사용해서 코드를 구현 한다. 
iOS
	Object C ... 
	기본 틀이 구성되어 있느나
	개발자가 직접 구현을 해야 한다. 

앱 애플리케이션 + 웹 애플리케이션 
: 폰에 내장되어 있는 브라우저에서 구동되는 프로그램 
	아이폰에 있는 사파리 웹 브라우저를 이용해서 + Spring Web MVC 프레임워크 + Mybatis 프레임워크
	안드로이드에 내장되어 있는 웹 브라우저를 이용해서 + Spring Web MVC 프레임워크 + Mybatis 프레임워크
	앱 웹 + 스프링프레임워크를 연동할 때 Ajax를 사용한다 

모바일 웹(web) 환경
---------------------
웹 : 브라우저 서비스 

네이버 
-------
폰 : https://m.naver.com
데탑 : https://www.naver.com/
데탑에서 폰 url : https://m.naver.com
폰에서 데탑 url : https://www.naver.com/

jQuery 
: 웹 브라우저 : https://jquery.com/
: 모바일 전용 브라우저 : https://jquerymobile.com/
: 크로스 브라우징 : 안드로이드 : https://jquery.com/browser-support/


앱 : App : Mobile Application
=====================================
네이티브 앱 : native app : 폰에서만 구동 되는 프로그램 
			각 플랫폼 전용 개발 도구(언어) 와 SDK(Software Development Kit)를 이용해서 개발한다.
			아이폰은 XCode와 Object-C 언어
			안드로이드는 java, kotlin
			윈도우폰은 C# 
			카메라, 스프커, GPS 등 장치(디바이스)를 직접 제어하는 프로그램 

웹앱 : Web App
			웹 기술로 개발하지만 네이티브앱 처럼 보이는 애플리케이션

하이브리드 앱 : hybrid app
			네이티브앱 처럼 모바일 기기에 설치해서 사용하지만
			내부적으로는 웹 기술로 구현된다.
			먼저, 표준 웹 기술로 웹앱을 개발하고 
			이를 다시 네이트브앱으로 변환한 다음에 배포하는 형태.


안드로이드 구조
-------------------------
1. 응용프로그램 Application
	안드로이드 스마트폰에서 사용할 수 있는 일반적인 응용프로그램
	웹브라우저, 달력, 구글 맵, 연락처, 게임 등 

2. 응용 프로그램 프레임워크 Application Framework
	안드로이드 api
		Activity Manager, View System, Content Providers etc.

3. 안드로이드 런타임 Android Runtime
	Java 코어 라이브러 와 
	달빅 가상머신(Dalvik Virtual Machine) 또는 아트 런타임(ART Runtime)
	안드로이드는 Java 문법으로 프로그래밍하지만 자바 가상 머신을 사용하지 않고 
	달빗 가상 머신이나 아트 런타임을 사용한다. 

4. 라이브러리 Libraries
	안드로이드에서 사용되는 여러 시스템 라이브러리, 
	시스템 접근 때문에 C로 작성되어 있다.

5. 리눅스 커널 Linux Kernel
	하드웨어의 운영과 관련된 저수준의 관리 기능
	메모리 관리, 디비아스 드라이버, 보안 등...
	카메라, 터스스크린, GPS 등 
	많은 스마트폰 장치 지원을 리눅스 커널 사용

안드로이드 4대 컴포넌트
-------------------------

액티비티 Activity
	액티비티는 안드로이드폰에 나타나는 화면 하나하나를 말한다. 

	MainActivity.java
		액티비티 이다.
		setContentView(R.layout.activity_main)화면을 불러 사용
	activity_main.xml 
		화면은 구성하는 코드로 구성

	인텐트 intent
		안드로이드의 4대 컴포넌트가 서로 데이터를 주고받기 위한 메시지 객체이다.
		명시적 인텐트
			한쪽방향 인텐트
			양방향 인텐트 : 계산기 
			
		암시적 인텐트 implicit intent
			약속된 액셔을 지정하여 안드로이드에서 제공하는 
			기존 응용프로그램을 실행하는 것 
			액션지정 -> 전화걸기, 웹브라우저, 갤러리, 음악듣기, 동영상 보기 
		
		생명주기
			응용프로그램이 시작되면 onCreate(), onStart(), onResume()
			메소드가 수행되고 메인 액티비티 화면이 나온다. 이것이 메인 액티비티의 실행 상태이다.
			이 상태에서 메인 액티비티를 끝내면 
			onPause(), onStop(), onDestroy() 메소드가 차례로 수행되고 응용 프로그램이 종료된다. 
			만약 다른 액티비티를 요청하면 onPause(), onStop() 메소드가 수행되고 
			메인 액티비티가 중되면 다른 액티비티 화면이 나온다.
			또 다른 액티비티의 사용을 종료하면 onRestart(), onStart(), onDestroy()
			메소드가 수행되고 다시 메인 액티비티 화면이 나온다. 
		
서비스 Service
	서비스는 눈에 보이는 화면(액티비티)과 상관없이 백그라운드에서 동작하는 컴포넌트이다.
	화면 없이 동작하는 프로그램으로 데몬(daemon), 
	백그라운드 프로세스(background process)라고도 한다. 
	로컬에서 동작하는 서비스는 서비스 생성 -> 서비스 시작 -> 서비스 종료 3단계 동작을 거친다.

브로드캐스트 리시버 Broadcat Receiver
	문자 메시지 도작, 배터리 방전, SD 카드 탈부착, 네트워크 환경 변화 등이 발생하면 
	전체 용용 프로그램이 들을 수 있도록 방송 신호를 보낸다. 
	그리고 브로드캐스트 리시버(Broadcast Receiver)는 이러한 방송 메시지가 발생하면 반응한다.
	배러티가 얼마 남지 않았을 때 경고 문자나 소리를 방생시키는 기능을 구현할 수 있다.
	배터리 관련 액션
	ACTION_BATTERY_CHANGED : 배터리의 상태가 변경될 때
	ACTION_BATTERY_LOW : 배터리가 거의 방전되었을 때
	ACTION_BATTERY_OKAY : 배터리가 방전 상태에서 정상 수준으로 돌아왔을 때 

콘텐트 프로바이더 Content Provider
	응용 프로그램 사이에 데이터를 공유하기 위한 컴포넌트이다. 
	안드로이드 응용 프로그램은 데이터에 자신만 접근할 수 있으므로 
	자신의 데이터를 외부에 공개하려면 콘텐트 프로바이더를 만들어야 한다. 
	콘텐트 프로바이더의 정보를 제공하는 방법으로는 
	URI(Uniform Resource Identifier)가 있다. 
	콘텐트 프로바이터에서 처리하는 데이터는 일반적으로 
	데이터베이스 또는 파일로 저장된다. 

	안드로이드에서 자체적으로 제공하는 주요 콘텐트 프로바이더 
	연락처 전화번호 : android.provider.Contacts.Phones.CONTENT_URI
	통화 기록 : android.provider.CallLog.Calls.CONTENT_URI
	시스템 설정값 : android.provider.System.CONTENT_URI
	내장 미디어의 이미지 : android.provider.MediaStore.Image.Media.INTERNAL_CONTENT_URI
	내장 미디어의 동영상 : android.provider.MediaStore.Video.Media.INTERNAL_CONTENT_URI
	내장 미디어의 오디오 : android.provider.MediaStore.Audio.Media.INTERNAL_CONTENT_URI
	내장 미디어의 이미지 : android.provider.MediaStore.Image.Media.EXTERNAL_CONTENT_URI
	내장 미디어의 동영상 : android.provider.MediaStore.Video.Media.EXTERNAL_CONTENT_URI
	내장 미디어의 오디오 : android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI 


안드로이드 설치 
-------------------------

1. 인텔 HAXM(Hardware Accelerated eXecution Manager)설치
	https://github.com/intel/haxm/releases/
	intelhaxm-android.exe
2. Android Studio 다운로드
	http://developer.android.com
3. Android Studio 설치 
	android-studio-ide-201.7042882-windows.exe : 4.1
	android-studio-ide-191.5900203-windows.exe : 3.5.1
	android-studio-2020.3.1.25-windows.exe <---- 이 버전 설치 할 것 
4. Android Studio 환경 설정
5. 안드로이드 SDK 업데이트
6. Android Virtual Device(AVD) 만들기 : 애뮬레이터 : 윈도우에서 돌아가는 실제 폰 



안드로이드 프로젝트 구성 
-------------------------

안드로이드 프로젝트 생성
-------------------------
1. Android Studio 실행
2. Start a new Android Studio project
3. Choose your project 
	Phone and Tablet탭의 Empty Activity 선택 Next

4. Counfigure your project 에서 프로젝트 정보 입력 
		
	Name : HelloAndroid
			프로젝트 이름은 대문자로 시작한다.
	
	Package name : a.b.c.helloadnroid
			도메인(a.b.c)과 애플리케이션 이름을 이어서 만든다.
	
	Save location : C:\00.KOSMO72\60.Android\HelloAndroid
			프로젝트가 저장될 폴더를 지정한다(한글 안됨)
	
	Language : Java
	
	Minimum API levle : API 16: Android 4.1(Jelly Bean) : 이 앱이 작동하는 최하 버전 

	Finish 클릭 

5.  Activity Name : MainActivity.java
	
	Layout Name : activity_main.xml : 안드로이드 화면을 구성하는 xml

		LinearLayout : 수직, 수평 배치로 가장 간단하게 배치가 가능하지만 성능면에서 많이 떨어진다.
		RelativeLayout : 성능면에서 우수하지만 View 배치 속성이 많고 복잡하다는 단점이 있다.
		ConstraintLayout : 이 두가지 Layout의 장점을 모두 취할 수 있는 Layout입니다.

app
-------------------------------------------------------
	java
		a.b.c.baseapp
			MainActivity.java 
				setContentView(R.layout.activity_main)
	res
		layout
			activity_main.xml
				android:text="@string/strBtn1"
		values
			strings.xml
				<string name="strBtn1">버튼입니다</string>
-------------------------------------------------------

mainfests
	매니페스트 파일(AndroidMainifest.xml)이 들어 있다.
	앱의 여러가지 정보를 담고 있는 있다.

java
	하위에 패키지명의 하위폴더가 있는데 
	안드로이드 프로젝트를 생성할 때 입력하는 패키지 이름과 동일 하다.
	패키지 이름아래 MainActivity.java로 메인 Java 소스가 들어있다.
	주로 액티비티(화면, activity_main.xml)에서 어떤 일을 할 지를 프로그래밍한다.

	java(generated)
		Android Studio 3.2부터 제공, 시스템 내부적으로 사용하는 폴더

res
	앱 개발에 사용되는 이미지, 레이아웃, 문자열 등이 들어가는 폴더
	
	drawable
		이미지 파일 
	
	layout
		액티비티(화면)을 구성하는 xml 파일은 넣는다.
		기본적으로 activity_main.xml을 초기화면으로 지정되어 있다.
		추가로 화면이 필요하면 xml 형태로 추가 생성한다.
	
		mipmap	
			디자인 화면, 앱이 설치된 후에 보이는 런처 아이콘 
			xxxhdpi, xxhdpi, xhdpi 초고해상도 런처 아이콘 파일
			hdpi는 고해상도 런처 아이콘 파일
			mdpi는 중해상도 런처 아이콘 파일
	
	values
		strings.xml : 문자열 저장 
		colors.xml : 색상표 저장
		styles.xml : 스타일 저장 
	
	필요에 따라 폴더 생성해서 사용  
	menu 폴더 : 메뉴 xml 파일 저장 
	anim 폴더 : 애니메이션 저장 폴더 

	res(generated)
		Android Studio 3.5부터 제공, 시스템 내부적으로 사용하는 폴더

	Gradle Scripts
		Gradle 빌드 시스템과 관련된 파일
		build.gradle(Module: app) 
			: 빌드 스크립트의 핵심 파일, 컴퍼일 버전, 실행되는 최하 버전, 컴파일 라이브러리 등 등록
		local.properties : 컴파일되는 SDK의 경로
		grade.properties : JVM 관련 메모리 설정
		
