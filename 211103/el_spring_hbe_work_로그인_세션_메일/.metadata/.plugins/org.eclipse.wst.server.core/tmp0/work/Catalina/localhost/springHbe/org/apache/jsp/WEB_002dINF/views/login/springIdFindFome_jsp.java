/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-11-03 07:23:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class springIdFindFome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>IDFIND</title>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){	\r\n");
      out.write("		\r\n");
      out.write("		$(\"#mcomfirm\").click(function(){\r\n");
      out.write("			console.log(\"mcomfirm >>> : \");		\r\n");
      out.write("			alert(\"mcomfirm >>> : \");\r\n");
      out.write("			\r\n");
      out.write("			let url = \"email_authentication.h\";						\r\n");
      out.write("			let mnameVal = $(\"#mname\").val();			\r\n");
      out.write("			let memailVal = $(\"#memail\").val();			\r\n");
      out.write("						\r\n");
      out.write("			$.get(url\r\n");
      out.write("				 ,{ \"mname\":mnameVal, \"memail\":memailVal }			\r\n");
      out.write("				 ,function(data){	\r\n");
      out.write("					var sVal = $(data).find(\"result\").text();	\r\n");
      out.write("					alert(sVal);					\r\n");
      out.write("				 }\r\n");
      out.write("			);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#idbtn\").click(function(){\r\n");
      out.write("			console.log(\"idbtn >>> : \");\r\n");
      out.write("			alert(\"idbtn >>> : \");			\r\n");
      out.write("			$('#idForm').attr({\r\n");
      out.write("				'action':'idFind.h',\r\n");
      out.write("				'method':'GET',\r\n");
      out.write("				'enctype':'application/x-www-form-urlencoded'\r\n");
      out.write("			}).submit();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3 align=\"center\">IDFIND : 아이디 찾기 </h3>\r\n");
      out.write("<h3 align=\"center\">본인확인 이메일로 인증</h3>\r\n");
      out.write("<hr>\r\n");

	//Object obj = request.getAttribute("aList");
	//if (obj == null) return;
	String mname = "";
	String memail = "";
	String authnum = "";
	
	//if (obj !=null){
	//	ArrayList<String> aList = (ArrayList)obj;
	//	System.out.println("aList.size() >>> : " + aList.size());
	//	mname = aList.get(0);
	//	memail = aList.get(1);
	//	authnum = aList.get(2);
	//}
	System.out.println("idEmailCheck mname >>> : " + mname);
	System.out.println("idEmailCheck memail >>> : " + memail);
	System.out.println("idEmailCheck authnum >>> : " + authnum);
	

      out.write("\r\n");
      out.write("<h4 align=\"center\">본인확인 이메일 주소와  입력한 이메일 주소가 같아야, 인증번호를 받을 수 있습니다.</h4>\r\n");
      out.write("<form name=\"idForm\" id=\"idForm\">\r\n");
      out.write("<table border=\"1\" align=\"center\">\r\n");
      out.write("<tr>\r\n");
      out.write("<td>이름</td>\r\n");
      out.write("<td><input type=\"text\" name=\"mname\" id=\"mname\" value='");
      out.print( mname);
      out.write("'  style=\"width:200px;\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>이메일 주소</td>\r\n");
      out.write("<td>\r\n");
      out.write("	<input type=\"text\" name=\"memail\" id=\"memail\" value='");
      out.print( memail);
      out.write("'  placeholder=\"\" style=\"width:200px;\">\r\n");
      out.write("	<button type=\"button\" id=\"mcomfirm\">인증번호받기</button>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>인증번호</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type=\"text\" name=\"authnum\" id=authnum value='");
      out.print( authnum);
      out.write("' \r\n");
      out.write("       placeholder=\"인증번호  6자리 숫자 입력\" style=\"width:200px;\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td></td>\r\n");
      out.write("<td>인증번호가 오지 않나요\r\n");
      out.write("	<img src=\"/springHbe/img/img_mandu/ase.gif\" width=\"20\" height=\"20\" \r\n");
      out.write("	title=\"발송한 메일이 스팸 메일로 분류되는 것은 아닌지 &#13;확인하세요, 스팸메일함에도 메일이 없으면, &#13;다시 한 번 '인증번호 받기'를 눌러주세요.\">\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"center\">\r\n");
      out.write("<button type=\"button\" id=\"idbtn\">다음</button>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table> \r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
