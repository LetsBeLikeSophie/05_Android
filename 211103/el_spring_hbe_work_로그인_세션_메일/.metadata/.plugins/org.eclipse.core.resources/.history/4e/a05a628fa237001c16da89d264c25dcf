package a.b.c.com.cgi.session;

import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionBindingListener;
import javax.servlet.http.HttpSessionBindingEvent;
import java.util.Hashtable;
import java.util.Enumeration;

public class K_SessionManager implements HttpSessionBindingListener{
	
	private static K_SessionManager kManager = null;
	
	// 사용자 id를 저장해 둘 Hashtable
	private static Hashtable hashManager = new Hashtable();
	
	// 생성자
	private K_SessionManager(){
		super();
	}
	
	// 싱글톤 기법 
	public static synchronized K_SessionManager getInstance(){
		
		if(kManager == null){
			kManager = new K_SessionManager();
		}
		
		return kManager;
	}
	
	// 해당 세션에서 이미 로그인을 했는지 확인 
	// 세션아이디를 받아서 해당 세션이 로그인 상태이면 true를, 아니면 false를 리턴.
	public boolean isLogin(String sessionID){
		
		boolean isLogin = false;
		
		Enumeration e = hashManager.keys();
		String key = "";
		
		while(e.hasMoreElements()){
			
			key = (String)e.nextElement();
			
			if (sessionID.equals(key)){
				isLogin = true;
			}
		}
		
		return isLogin;
	}
	
	// 해당 아이디의 동시 사용을 막기위해 
		// 이미 사용중인 아이디인지 확인
		// 유저아이디를 받아서 해당 유저가 세션을 사용 중이면 true, 아니면 false를 리턴.
	{
		boolean isFlag = false;
		
		Enumeration e = hashManager.keys();
		String key = "";
		
		while(e.hasMoreElements()){
			
			key = (String)e.nextElement();
			
			if (userID.equals(hashManager.get(key))){
				isFlag = true;
			}
		}
		
		return isFlag;
	}
	
	// Hashtable�� ���Ǿ��̵� �������̵� ¦���� �ֱ�. ==> ���Ǿ��̵�� �������̵� ã�� �� �ְ���.
	// Hashtable�� ���ǿ� �ֱ� ==> ������ ���� Hashtable�� ������ �� �ְ���.
	public void setSession(HttpSession hSession, String userID)
	{
		hashManager.put(hSession.getId(), userID);
		hSession.setAttribute("login", this.getInstance());
	}
	
	// ������ �����Ǿ��� �� �ڵ����� ȣ��Ǵ� �޼ҵ�
	public void valueBound(HttpSessionBindingEvent event)
	{
		// nothing
	}
	
	// ������ ������ �� �ڵ����� ȣ��Ǵ� �޼ҵ�
	// ������ �������� Hashtable���� �ش� ������ ������ �����Ѵ�.
	public void valueUnbound(HttpSessionBindingEvent event)
	{
		hashManager.remove(event.getSession().getId());
	}
	
	// ���� ID�� ���� �α����� ID�� ������ ��
	public String getUserID(String sessionID)
	{
		return (String)hashManager.get(sessionID);
	}
	
	// ���� ������ ��
	public int getUserCount()
	{
		return hashManager.size();
	}
}
